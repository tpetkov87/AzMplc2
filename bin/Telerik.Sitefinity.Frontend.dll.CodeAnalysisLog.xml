<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\SitefinityWebApp\bin\Telerik.Sitefinity.Frontend.dll">
   <Modules>
    <Module Name="telerik.sitefinity.frontend.dll">
     <Namespaces>
      <Namespace Name="Telerik.Sitefinity.Frontend.Mvc.Helpers">
       <Types>
        <Type Name="ContentDataItemResolver" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetItemFromUrl(Telerik.Sitefinity.Data.IManager,System.Type,System.String,System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="ContentDataItemResolver.cs" Line="143">'manager', a parameter, is cast to type 'IContentManager' multiple times in method 'ContentDataItemResolver.GetItemFromUrl(IManager, Type, string, out string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HtmlHelperExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HtmlSanitize(System.Web.Mvc.HtmlHelper,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="htmlHelper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="HtmlHelperExtensions.cs" Line="57">Parameter 'htmlHelper' of 'HtmlHelperExtensions.HtmlSanitize(this HtmlHelper, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UrlSanitize(System.Web.Mvc.HtmlHelper,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="htmlHelper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="HtmlHelperExtensions.cs" Line="71">Parameter 'htmlHelper' of 'HtmlHelperExtensions.UrlSanitize(this HtmlHelper, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="HtmlHelperExtensions.cs" Line="71">Change the type of parameter 'url' of method 'HtmlHelperExtensions.UrlSanitize(this HtmlHelper, string)' from string to System.Uri, or provide an overload of 'HtmlHelperExtensions.UrlSanitize(this HtmlHelper, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PagingHelpers" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExtractValidPage(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ContentBaseController,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="controller" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="63">Parameter 'controller' of 'PagingHelpers.ExtractValidPage(this ContentBaseController, int?)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GeneratePagingTemplate(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ContentBaseController,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="controller" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="21">Parameter 'controller' of 'PagingHelpers.GeneratePagingTemplate(this ContentBaseController, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="21">Change the type of parameter 'pageUrl' of method 'PagingHelpers.GeneratePagingTemplate(this ContentBaseController, string, string)' from string to System.Uri, or provide an overload of 'PagingHelpers.GeneratePagingTemplate(this ContentBaseController, string, string)', that allows 'pageUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="21">Change the type of parameter 'urlKeyPrefix' of method 'PagingHelpers.GeneratePagingTemplate(this ContentBaseController, string, string)' from string to System.Uri, or provide an overload of 'PagingHelpers.GeneratePagingTemplate(this ContentBaseController, string, string)', that allows 'urlKeyPrefix' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatePageFromQuery(Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers.ContentBaseController,System.Nullable`1&lt;System.Int32&gt;&amp;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="42">Consider a design that does not require that 'page' be a reference parameter.</Issue>
            </Message>
            <Message Id="controller" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="42">Parameter 'controller' of 'PagingHelpers.UpdatePageFromQuery(this ContentBaseController, ref int?, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Helpers" File="PagingHelpers.cs" Line="42">Change the type of parameter 'urlKeyPrefix' of method 'PagingHelpers.UpdatePageFromQuery(this ContentBaseController, ref int?, string)' from string to System.Uri, or provide an overload of 'PagingHelpers.UpdatePageFromQuery(this ContentBaseController, ref int?, string)', that allows 'urlKeyPrefix' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Compilation">
       <Types>
        <Type Name="CompilationPerformanceRazorView" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetMethodPerformanceRegion(System.Web.Mvc.ViewContext)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Infrastructure\Compilation" File="CompilationPerformanceRazorView.cs" Line="123">'CompilationPerformanceRazorView.GetMethodPerformanceRegion(ViewContext)' is coupled with 34 different types from 20 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSource(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Infrastructure\Compilation" File="CompilationPerformanceRazorView.cs" Line="208">'cacheDep', a variable, is cast to type 'ControlPresentationCacheDependency' multiple times in method 'CompilationPerformanceRazorView.GetSource(string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Controllers">
       <Types>
        <Type Name="ContentBaseController+OpenGraphTypes" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'ContentBaseController.OpenGraphTypes' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'ContentBaseController.OpenGraphTypes' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ControllerContainerInitializer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'ControllerContainerInitializer' is coupled with 87 different types from 32 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ControllerExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'ControllerExtensions' is coupled with 93 different types from 34 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetDynamicContentType(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Infrastructure\Controllers" File="ControllerExtensions.cs" Line="198">Replace method 'ControllerExtensions.GetDynamicContentType(string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Telerik.Sitefinity.Frontend.Mvc.Infrastructure.Routing">
       <Types>
        <Type Name="FeatherActionInvoker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'FeatherActionInvoker' is coupled with 94 different types from 38 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetProviderNames(System.Web.Mvc.ControllerBase,System.Type)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\Infrastructure\Routing" File="FeatherActionInvoker.cs" Line="216">'FeatherActionInvoker.GetProviderNames(ControllerBase, Type)' is coupled with 32 different types from 16 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Telerik.Sitefinity.Frontend.Mvc.StringResources">
       <Types>
        <Type Name="ClientComponentsResources" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Fullscreen" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fullscreen" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\StringResources" File="ClientComponentsResources.cs" Line="3113">Correct the spelling of 'Fullscreen' in member name 'ClientComponentsResources.Fullscreen' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InvalidUrlMessage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-03-29 07:47:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="D:\CMS\Sitefinity 4.0\OfficialReleases\Release_10_2_Fixes\Feather\Telerik.Sitefinity.Frontend\Mvc\StringResources" File="ClientComponentsResources.cs" Line="3177">Change the type of property 'ClientComponentsResources.InvalidUrlMessage' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
